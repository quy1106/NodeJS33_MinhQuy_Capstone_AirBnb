generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model BinhLuan {
  id              Int       @id @default(autoincrement())
  maPhong         Int
  maNguoiBinhLuan Int
  ngayBinhLuan    String    @db.VarChar(500)
  noiDung         String    @db.VarChar(500)
  saoBinhLuan     Int
  Phong           Phong     @relation(fields: [maPhong], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "BinhLuan_ibfk_1")
  NguoiDung       NguoiDung @relation(fields: [maNguoiBinhLuan], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "BinhLuan_ibfk_2")

  @@index([maNguoiBinhLuan], map: "maNguoiBinhLuan")
  @@index([maPhong], map: "maPhong")
}

model DatPhong {
  id           Int       @id @default(autoincrement())
  maPhong      Int
  maNguoiDung  Int
  ngayDen      String    @db.VarChar(500)
  ngayDi       String    @db.VarChar(500)
  soLuongKhach Int
  Phong        Phong     @relation(fields: [maPhong], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "DatPhong_ibfk_1")
  NguoiDung    NguoiDung @relation(fields: [maNguoiDung], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "DatPhong_ibfk_2")

  @@index([maNguoiDung], map: "maNguoiDung")
  @@index([maPhong], map: "maPhong")
}

model NguoiDung {
  id       Int        @id @default(autoincrement())
  name     String     @db.VarChar(500)
  email    String     @db.VarChar(500)
  password String     @db.VarChar(500)
  phone    String     @db.VarChar(500)
  birthday String     @db.VarChar(500)
  avatar   String?    @db.VarChar(500)
  gender   Boolean
  role     String     @db.VarChar(500)
  BinhLuan BinhLuan[]
  DatPhong DatPhong[]
}

model Phong {
  id       Int        @id @default(autoincrement())
  tenPhong String     @db.VarChar(500)
  khach    Int
  phongNgu Int
  giuong   Int
  phongTam Int
  moTa     String?    @db.VarChar(1000)
  giaTien  Int
  mayGiat  Boolean
  banLa    Boolean
  tivi     Boolean
  dieuHoa  Boolean
  wifi     Boolean
  bep      Boolean
  doXe     Boolean
  hoBoi    Boolean
  banUi    Boolean
  maViTri  Int
  hinhAnh  String?    @db.LongText
  BinhLuan BinhLuan[]
  DatPhong DatPhong[]
  ViTri    ViTri      @relation(fields: [maViTri], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "Phong_ibfk_1")

  @@index([maViTri], map: "maViTri")
}

model ViTri {
  id        Int     @id @default(autoincrement())
  tenViTri  String  @db.VarChar(500)
  tinhThanh String  @db.VarChar(500)
  quocGia   String  @db.VarChar(500)
  hinhAnh   String? @db.LongText
  Phong     Phong[]
}
